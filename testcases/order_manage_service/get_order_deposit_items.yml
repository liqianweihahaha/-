- config:
    name: 获取订金订单项
    base_url: ${get_order_service_host()}
    variables:
        - existed_placedById: ${internal_source_user_id()}
        - existed_skuNumber_deposit: ${sku_number_deposit()}
        - existed_deposit: 0.01
        - existed_customerId: ${source_user_id()}
        - unexisted_orderId: 123456
        - existed_state: 2
        - unexisted_state: 1000

- test:
    skipIf: ${is_production()}
    name: 创建订金订单
    api: api/order_manage_service/create_order_deposit.yml
    variables:
        - placedById: $existed_placedById
        - customerId: $existed_customerId
        - skuNumber: $existed_skuNumber_deposit
        - deposit: $existed_deposit
    validate:
        - eq: [status_code, 200]
    extract:
        - create_order_status: status_code
        - create_order_orderId: content.orderId

- test:
    name: 不带任何参数
    request:
        method: GET
        url: /orders/items/deposits
    validate:
        - eq: [status_code, 200]
        - length_equals: [content.0, 14]

- test:
    skipIf: ${is_production()}
    name: 通过orderId查询-orderId存在
    skipUnless: ${eval_equal($create_order_status, 200)}
    request:
        method: GET
        url: /orders/items/deposits?orderIds=$create_order_orderId
    validate:
        - eq: [status_code, 200]
        - eq: [content.0.orderId, $create_order_orderId]
        - length_equals: [content.0, 14]

- test:
    name: 通过orderId查询-orderId不存在
    request:
        method: GET
        url: /orders/items/deposits?orderIds=$unexisted_orderId
    validate:
        - eq: [status_code, 200]
        - length_equals: [content, 0]

- test:
    name: 通过state查询-state存在
    request:
        method: GET
        url: /orders/items/deposits?state=$existed_state
    validate:
        - eq: [status_code, 200]

- test:
    name: 通过state查询-state不存在
    request:
        method: GET
        url: /orders/items/deposits?state=$unexisted_state
    validate:
        - eq: [status_code, 200]
        - length_equals: [content, 0]