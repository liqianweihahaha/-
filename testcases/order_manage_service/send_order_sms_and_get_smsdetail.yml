- config:
    name: 订单service组合测试：创建普通订单-发送短信-根据orderId查询短信-获取短信详情
    base_url: ${get_order_service_host()}
    variables:
        - existed_customerPhoneNumber: ${order_customerPhoneNumber_config()}
        - existed_skuNumber: ${sku_number_config()}
        - existed_customerId: ${order_customerId_config()}
        - existed_placedBy: ${order_placedBy_config()}
        - existed_total_discount: null
        - existed_handledById: ${order_handledById_config()}
        - existed_transactionNumber: ${gen_random_string(20)}
        - existed_orderPlatform: ALIPAY
        - existed_actualPayment: 0.1
        - existed_afterSaleType: 'RETURN_REFUND'
        - existed_handledById: ${order_handledById_config()}
        - unexisted_orderId: 123456
        - unexisted_smsId: 111111

- test:
    skipIf: ${is_production()}
    name: 创建普通订单(数据准备1)
    api: api/order_manage_service/create_order.yml
    variables:
        - placedMethod: BY_ADMIN
        - orderPlatform: $existed_orderPlatform
        - customer_phone_number: $existed_customerPhoneNumber
        - customer_id: $existed_customerId
        - sku_number: $existed_skuNumber
        - total_discount: $existed_total_discount
    validate:
        - eq: [status_code, 200]
        - length_equals: [content.orderId, 20]
    extract:
        - create_order_status: status_code
        - create_order_orderId: content.orderId

- test:
    skipIf: ${is_production()}
    name: 发送短信-订单id存在
    base_url: ${get_order_service_host()}
    skipUnless: ${eval_equal($create_order_status, 200)}
    request:
        method: POST
        url: /orders/$create_order_orderId/sms
        json:
            handledById: $existed_handledById
    validate:
        - eq: [status_code, 200]

- test:
    skipIf: ${is_production()}
    name: 发送短信-订单id不存在
    base_url: ${get_order_service_host()}
    request:
        method: POST
        url: /orders/$unexisted_orderId/sms
        json:
            handledById: $existed_handledById
    validate:
        - eq: [status_code, 422]
        - eq: [content.error_code, '10017006']

- test:
    skipIf: ${is_production()}
    name: 根据订单id查询短信-订单id存在
    base_url: ${get_order_service_host()}
    skipUnless: ${eval_equal($create_order_status, 200)}
    request:
        method: GET
        url: /orders/$create_order_orderId/sms
    validate:
        - eq: [status_code, 200]
        - type_match: [content, object]
        - type_match: [content.smsIds, list]
    extract:
        - sms_id: content.smsIds.0
        - get_sms_id_code: status_code

- test:
    skipIf: ${is_production()}
    name: 获取短信详情-smsId存在
    base_url: ${get_order_service_host()}
    skipUnless: ${eval_equal($get_sms_id_code, 200)}
    request:
        method: GET
        url: /sms/details?smsIds=$sms_id
    validate:
        - eq: [status_code, 200]
        - type_match: [content, list]
        - length_equals: [content.0, 10]


- test:
    skipIf: ${is_production()}
    name: 获取短信详情-smsId不存在
    base_url: ${get_order_service_host()}
    skipUnless: ${eval_equal($get_sms_id_code, 200)}
    request:
        method: GET
        url: /sms/details?smsIds=$unexisted_smsId
    validate:
        - eq: [status_code, 200]