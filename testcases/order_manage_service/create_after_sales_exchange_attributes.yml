- config:
    name: 测试组合：创建订单-创建售后单（换货）-业务经理审核通过-业务负责人审核通过-会计审核通过-财务主管审核通过-检查新订单是否有继承售后单的attributes
    base_url: ${get_order_service_host()}
    variables:
        - existed_customerPhoneNumber: ${order_customerPhoneNumber_config()}
        - existed_skuNumber: ${sku_number_config()}
        - existed_customerId: ${order_customerId_config()}
        - existed_placedBy: ${order_placedBy_config()}
        - existed_total_discount: null
        - existed_handledById: ${order_handledById_config()}
        - existed_handledByName: ${order_handledByName_config()}
        - existed_transactionNumber: ${gen_random_string(20)}
        - existed_orderPlatform: ALIPAY
        - existed_actualPayment: 0.03
        - existed_afterSaleType: 'EXCHANGE'
        - existed_issued: true
        - unexisted_afterId: 123456
        - existed_key1: 'pay_type'
        - existed_value1: '3'
        - existed_key2: 'source_url'
        - existed_value2: 'https://ic.codemao.cn/pagegroup/1p9ekj5aib8'

- test:
    skipIf: ${is_production()}
    name: 创建普通订单(数据准备1)
    api: api/order_manage_service/create_order.yml
    variables:
        - placedMethod: BY_ADMIN
        - orderPlatform: $existed_orderPlatform
        - customer_phone_number: $existed_customerPhoneNumber
        - customer_id: $existed_customerId
        - sku_number: $existed_skuNumber
        - total_discount: $existed_total_discount
    validate:
        - eq: [status_code, 200]
        - length_equals: [content.orderId, 20]
    extract:
        - create_order_status: status_code
        - create_order_orderId: content.orderId

- test:
    skipIf: ${is_production()}
    name: 上传支付凭证(数据准备2)
    skipUnless: ${eval_equal($create_order_status, 200)}
    api: api/order_manage_service/upload_payment.yml
    variables:
        - order_id: $create_order_orderId
        - handledById: $existed_handledById
        - transactionNumber: $existed_transactionNumber
        - orderPlatform: $existed_orderPlatform
        - actualPayment: $existed_actualPayment
    validate:
        - eq: [status_code, 200]
    extract:
        - upload_payment_status: status_code

- test:
    skipIf: ${is_production()}
    name: 付款业务审核列表-订单id查询-获取paymentReviewId(数据准备3)
    skipUnless: ${eval_equal($create_order_status, 200)}
    api: api/order_manage_service/get_payments_reviews_list.yml
    variables:
        - orderIds: $create_order_orderId
    validate:
        - eq: [status_code, 200]
    extract:
        - search_status_code: status_code
        - paymentReviewId: content.items.0.paymentReviewId

- test:
    skipIf: ${is_production()}
    name: 业务经理审核通过(数据准备4)
    skipUnless: ${eval_equal($search_status_code, 200)}
    api: api/order_manage_service/bm_review_payment_reviews.yml
    variables:
        - orderId: $create_order_orderId
        - paymentReviewId: $paymentReviewId
        - reviewPassed: true
        - reviewedById: $existed_handledById
    validate:
        - eq: [status_code, 200]
    extract:
        - bm_review_status_code: status_code

- test:
    skipIf: ${is_production()}
    name: 财务经理审核通过（数据准备5）
    skipUnless: ${eval_equal($bm_review_status_code, 200)}
    api: api/order_manage_service/fm_review_payment_reviews.yml
    variables:
        - orderId: $create_order_orderId
        - paymentReviewId: $paymentReviewId
        - reviewPassed: true
        - reviewedById: $existed_handledById
        - receivedAt: ${get_timestamp(10)}
    validate:
        - eq: [status_code, 200]
    extract:
        - fm_review_status_code: status_code

- test:
    skipIf: ${is_production()}
    setup_hooks:
        - ${sleep_N_secs(4)}
    name: 售后申请预览-获取物料发货单等信息（数据准备6）
    request:
        method: GET
        url: ${ENV(transaction_admin_api_host)}/after_sales/previews/issuing?orderId=$create_order_orderId
        headers:
            Authorization: ${internal_source_user_login_token()}
    validate:
        - eq: [status_code, 200]
    extract:
        - shipmentId_1: content.items.0.shippingId
        - shipmentId_2: content.items.1.shippingId


- test:
    skipIf: ${is_production()}
    name: 创建售后单（普通订单）-所有必填参数都填写正确-提交成功
    request:
        method: POST
        url: /after_sales
        json:
            actualRefundAmount: 0.01
            afterSaleReasonId: 1
            afterSaleType: $existed_afterSaleType
            issued: $existed_issued
            owner: $existed_handledByName
            ownerId: $existed_handledById   
            orderId: $create_order_orderId
            refundMethod: "ORIGINAL"
            detailedReason: "测试售后单详细原因"
            afterSaleAttributes:
                  -
                   key: $existed_key1
                   value: $existed_value1
                  -
                   key: $existed_key2
                   value: $existed_value2     
            remarks:
                  -
                   remark: "自动化测试申请售后"         
            items:
                  -
                   materialNumber: ${material_number_1_config()}
                   returnsCount: ${material_count_1_config()}
                   shippingId: $shipmentId_1
                   skuNumber: $existed_skuNumber
                  -
                   materialNumber: ${material_number_2_config()}
                   returnsCount: ${material_count_2_config()}
                   shippingId: $shipmentId_2
                   skuNumber: $existed_skuNumber
            replacementItems:
                  -
                   skuNumber: $existed_skuNumber
                   quantity: 1
            shippingInfo:
                orderId: $create_order_orderId
                consigneeId: $existed_customerId
                consignee: '聂亚运'
                phoneNumber: $existed_customerPhoneNumber
                province: '广东省'
                provinceId: 19
                city:  '深圳市'
                cityId: 202
                district: '南山区'
                districtId: 1859
                streetAddress: '前海湾信利康大厦30楼'   
    validate:
        - eq: [status_code, 200]
    extract:
        - afterSale_Id: content.afterSaleId
        - afterSale_status: status_code


- test:
    skipIf: ${is_production()}
    name: 售后单-业务经理审核通过
    skipUnless: ${eval_equal($afterSale_status, 200)}
    api: api/order_manage_service/after_sales_review.yml
    variables:
        - afterSaleId: $afterSale_Id
        - remark: "业务经理审核通过"
        - reviewPassed: true
        - reviewedBy: $existed_handledByName
        - reviewedById: $existed_handledById
    validate:
        - eq: [status_code, 200]


- test:
    setup_hooks:
        - ${sleep_N_secs(1)}
    skipIf: ${is_production()}
    name: 售后单-业务负责人审核通过
    skipUnless: ${eval_equal($afterSale_status, 200)}
    api: api/order_manage_service/after_sales_review.yml
    variables:
        - afterSaleId: $afterSale_Id
        - remark: "业务负责人审核通过"
        - reviewPassed: true
        - reviewedBy: $existed_handledByName
        - reviewedById: $existed_handledById
    validate:
        - eq: [status_code, 200]

- test:
    setup_hooks:
        - ${sleep_N_secs(2)}
    skipIf: ${is_production()}
    name: 售后单-会计审核通过
    skipUnless: ${eval_equal($afterSale_status, 200)}
    api: api/order_manage_service/after_sales_review.yml
    variables:
        - afterSaleId: $afterSale_Id
        - remark: "会计审核通过"
        - reviewPassed: true
        - reviewedBy: $existed_handledByName
        - reviewedById: $existed_handledById
    validate:
        - eq: [status_code, 200]


# - test:
#     setup_hooks:
#         - ${sleep_N_secs(2)}
#     skipIf: ${is_production()}
#     name: 售后单-财务主管审核通过
#     skipUnless: ${eval_equal($afterSale_status, 200)}
#     api: api/order_manage_service/after_sales_review.yml
#     variables:
#         - afterSaleId: $afterSale_Id
#         - remark: "财务主管审核通过"
#         - reviewPassed: true
#         - reviewedBy: $existed_handledByName
#         - reviewedById: $existed_handledById
#     validate:
#         - eq: [status_code, 200]

- test:
    setup_hooks:
        - ${sleep_N_secs(4)}
    skipIf: ${is_production()}
    name: 获取售后单详情-afterSaleId存在
    skipUnless: ${eval_equal($afterSale_status, 200)}
    request:
        method: GET
        url: /after_sales/$afterSale_Id
    validate:
        - eq: [status_code, 200]
        - type_match: [content, object]
        - length_equals: [content, 31]
        - eq: [content.state, 'COMPLETED']

- test:
    skipIf: ${is_production()}
    name: 获取换货结转信息-afterSaleId存在
    skipUnless: ${eval_equal($afterSale_status, 200)}
    request:
        method: GET
        url: /after_sales/$afterSale_Id/exchanges
    validate:
        - eq: [status_code, 200]
        - type_match: [content, object]
        - length_equals: [content, 7]
        - contains: [content, 'carriedForwardOrderId']
        - contains: [content, 'balanceCarryforward']
    extract:
        - new_orderId: content.carriedForwardOrderId


- test:
    name: 获取订单属性列表
    request:
        method: GET
        url: /orders/attributes?orderIds=$new_orderId 
    validate:
        - eq: [status_code, 200]
        - type_match: [content, object]
        - length_equals: [content.items, 2]
        - length_equals: [content.items.0, 5]
        - eq: [content.items.0.key, $existed_key1]
        - eq: [content.items.0.value, $existed_value1]
        - eq: [content.items.1.key, $existed_key2]
        - eq: [content.items.1.value, $existed_value2]


